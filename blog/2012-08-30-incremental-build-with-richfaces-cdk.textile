---
layout: post
title: Incremental build with RichFaces CDK
tags: [ richfaces, cdk ]
---

<div dir="ltr" style="text-align: left;" trbidi="on">
To whom of us using&nbsp;RichFaces&nbsp;CDK and being unsatisfied with **a build time**, our day just came!

CDK got an **incremental build feature**, which caches information collected during a Library compilation and store it on a hard drive.

Once you trigger a build for a second time, the last modification time of all sources is compared to last modification time of cache file.

When CDK recognizes that any source has changed, it will re-compile it and the collected data will be applied on Library model again, effectively rewriting old data.

h2. How to Configure Incremental Build

How to configure incremental build in your CDK project? It's pretty simple: **you don't need to do anything**.

Incremental build is **turned on by default** to make your life easier and to save your precious time.

I recommend you to configure "the fast CDK turnaround using JRebel":https://github.com/richfaces/richfaces-sandbox/tree/master/hot-deployment - together with the incremental build, nothing will beat you in the "rich JSF components development time":http://www.bleathem.ca/blog/2011/11/richfaces-4-cdk-jqeury-ui-tabs.html.

h2. Troubleshooting

When using incremental build at current implementation, be aware that in some cases when you do **structural changes** (e.g. renaming methods), you may get to a point where the incrementally **generated sources will not be valid** - sometimes it won't make any trouble (attribute renaming), sometimes sources generated by CDK might not be even compilable at all.

In this case, you just need to recompile the sources from scratch, either with additional <span style="font-family: Courier New, Courier, monospace;">maven-cdk-plugin</span> configuration

bc. $ mvn cdk:generate -Dcdk.recompile=true

or using "command line interface":https://github.com/richfaces/richfaces-sandbox/tree/master/hot-deployment:

bc. $ bash run.sh --force-recompile

p. However in most cases, incremental build will work just fine. :-)

h2. Improvement

<div>Using incremental build, I have achieved build-time improvement from&nbsp;**10 545**&nbsp;**ms**&nbsp;to&nbsp;**1 622 ms&nbsp;**in&nbsp;<a href="https://github.com/richfaces/sandbox/tree/develop/bootstrap">Bootstrap sandbox project</a>.</div><div>
</div><div>Such an improvement will allow us to&nbsp;re-factor&nbsp;RichFaces component suite to be developed just from one maven module and simplify a build a lot.</div>

h3. Enjoy JSF component development!

</div>
